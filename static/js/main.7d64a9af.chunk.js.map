{"version":3,"sources":["components/header/header.components.jsx","components/menu-item/menu-item.component.jsx","components/menu-container/menu-container.components.jsx","pages/homepage/homepage.component.jsx","pages/foodItem/foodItem.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","resetFoodHandler","className","onClick","MenuItem","foodDetail","onClickHandler","id","title","image","store","imageUrl","description","rating","style","backgroundImage","toUpperCase","data-id_key","MenuContainer","foodList","selectFoodHandler","map","item","key","HomePage","props","FoodItem","itemDetail","App","useState","selectedFood","setSelectedFood","filter","event","currentTarget","getAttribute","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7d64a9af.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.styles.scss';\r\n\r\nfunction Header({ resetFoodHandler }) {\r\n    return (\r\n        <div className='header'>\r\n            <div>Zomato</div>\r\n            <div onClick={resetFoodHandler}>Home</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './menu-item.styles.scss';\r\n\r\nconst MenuItem = ({ foodDetail, onClickHandler }) => {\r\n\r\n    const { id, title = '', image, store, description, rating } = foodDetail;\r\n    const imageUrl = image;\r\n    return (\r\n        <div\r\n            className={`menu-item`}>\r\n            <div className='background-image'\r\n                style={{ backgroundImage: `url(${imageUrl})` }}\r\n            />\r\n            <div className='content'>\r\n                <div className='content-header'>\r\n                    <span className='content-title'> {title.toUpperCase()}</span>\r\n                    <span className='rating'>\r\n                        <button data-id_key={id}\r\n                            onClick={onClickHandler} >Buy</button>\r\n                    </span>\r\n                </div>\r\n                <div className='description'>{store}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuItem;","import React from 'react';\r\nimport './menu-container.styles.scss';\r\nimport MenuItem from '../../components/menu-item/menu-item.component';\r\n\r\nconst MenuContainer = ({ foodList = [], selectFoodHandler }) => {\r\n    return (\r\n      <div className=\"menuContainer\">\r\n            {foodList.map(item => <MenuItem key={item.id} foodDetail={item} onClickHandler={selectFoodHandler} />\r\n            )}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default MenuContainer;","import React from 'react';\r\n\r\nimport './homepage.styles.scss';\r\nimport MenuContainer from '../../components/menu-container/menu-container.components';\r\n\r\nfunction HomePage(props) {\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <MenuContainer {...props}>\r\n            </MenuContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './foodItem.styles.scss';\r\n\r\nfunction FoodItem({ itemDetail }) {\r\n    const { title = '', image, description } = itemDetail;\r\n    const imageUrl = image;\r\n    return (\r\n        <div\r\n            className={`foodItem`}>\r\n            <div className='background-image'\r\n                style={{ backgroundImage: `url(${imageUrl})` }}\r\n            />\r\n            <div className='content'>\r\n                <div className='content-header'>\r\n                    <span className='content-title'> {title.toUpperCase()}</span>\r\n                </div>\r\n                <div className='description'>{description}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodItem;","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/header/header.components';\nimport HomePage from './pages/homepage/homepage.component';\nimport FoodItem from './pages/foodItem/foodItem.component';\n\nfunction App() {\n\n  const [foodList, setFoodLIst] = useState([\n    {\n      id: 1,\n      image: \"https://media.gettyimages.com/photos/authentic-indian-food-picture-id639389404?s=2048x2048\",\n      title: \"Shahi Paneer\",\n      store: \"Hauz Khas, CP, Palam Vihar\",\n      description: \" Avaialable here\"\n    },\n    {\n      id: 2,\n      image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS-ZiAMp51au4IyAalE3X5TvNjSrPxFBODgLLeNMjPcs0tRWUKw&usqp=CAU\",\n      title: \"King Burger\",\n      store: \"Hauz Khas, CP, Palam Vihar\",\n      description: \" Avaialable here\"\n    },\n    {\n      id: 3,\n      image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQLrY2XxB4AfTBh6kFccqpFROY8QNjosL8tWD767iqmMqDLs_TG&usqp=CAU\",\n      title: \"Garlic Fruit Bread\",\n      store: \"Hauz Khas, CP, Palam Vihar\",\n      description: \" Avaialable here\"\n    },\n    {\n      id: 4,\n      image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQqLlHBNdKRIGLWtrChWRcbXBw0naLvDohYa9OTYu_lSBqP8zjj&usqp=CAU\",\n      title: \"Sandwich\",\n      store: \"Hauz Khas, CP, Palam Vihar\",\n      description: \" Avaialable here\"\n    },\n    {\n      id: 5,\n      image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ482jXqfnNceQKtlY3GXrYVxmL_lPMmSmoM70ORh7h8Q7dpLEB&usqp=CAU\",\n      title: \"Oats\",\n      store: \"Hauz Khas, CP, Palam Vihar\",\n      description: \" Avaialable here\"\n    },\n    {\n      id: 6,\n      image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTDfnoGXKLXgTOAo6R70Ikro51DhBsZn8OUjebuV3WJpRLrViUR&usqp=CAU\",\n      title: \"Pollo Loco\",\n      store: \"Hauz Khas, CP, Palam Vihar\",\n      description: \" Avaialable here\"\n    },\n    {\n      id: 7,\n      image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQU9KN4iI0mab-Gg2jWK8m3jbwDL_pbCATpFcGLJajI-c-qwhfP&usqp=CAU\",\n      title: \"Fried Chicken\",\n      store: \"Hauz Khas, CP, Palam Vihar\",\n      description: \" Avaialable here\"\n    },\n    {\n      id: 8,\n      image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSYuA--rFWLcxawlKg6SWi8PFAitXle_W6GiLZER70u71B7vlVd&usqp=CAU\",\n      title: \"Pizza\",\n      store: \"Hauz Khas, CP, Palam Vihar\",\n      description: \" Avaialable here\"\n    },\n  ]);\n  const [selectedFood, setSelectedFood] = useState(null);\n\n  function selectFoodHandler(event) {\n    const id = event.currentTarget.getAttribute('data-id_key');\n    console.log(id);\n    setSelectedFood(id);\n  }\n\n  function resetFoodHandler() {\n    setSelectedFood(null);\n  }\n\n  const itemDetail = foodList.filter(item => item.id == selectedFood);\n\n  return (\n    <div className=\"App\">\n      <Header resetFoodHandler= {resetFoodHandler}></Header>\n      {selectedFood ?\n        <FoodItem itemDetail={itemDetail[0] || {}} />\n      : <HomePage foodList={foodList} selectFoodHandler={selectFoodHandler} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}